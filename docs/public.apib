FORMAT: 1A

# Ballot

Customizable anonymous online balloting system with ring signature authentication.

## Authentication

+ This API uses [JWT](http://jwt.io/) for authentication,
+ Every token MUST be refreshed before its expiration time,
+ Token MUST be provided in `Authorization` header,
+ Token MUST be provided for each request that requires authentication,

### Claims
+ `exp` - The exp ( *expiration time* ) claim identifies the expiration time on or after which the JWT MUST NOT be accepted for processing.
+ `iat` - The iat ( *issued at* ) claim identifies the time at which the JWT was issued.
+ `sub` - The aud ( *audience* ) claim identifies the subject of this token (for e.g. a user id).
+ `iss` - The iss ( *issuer* ) claim identifies the principal that issued the JWT.

## Filtering, Ordering, Pagination

### Filtering

Filtering is not supported.

### Ordering

Ordering is not supported.

### Pagination

Pagination is not supported.

## HTTP Methods

This API uses HTTP verbs (methods) as following:

+ `GET` - *Read* - used to **read** (or retrieve) a representation of a resource.
+ `POST` - *Create/Mutate* - used to **create** new resources or **mutate** existing resources.

## Media Type

Where applicable this API MUST use the JSON media-type. Requests with a message-body are using plain JSON to set or update resource states.

`Content-Type: application/json` header MUST be set on all requests. `Accept: application/json` header SHOULD be set on all requests.

## Notational Conventions

The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119](https://www.ietf.org/rfc/rfc2119).

## Resource IDs

This API uses long non-sequential unique ids. Every resource id MUST consists of 16 or 64 lower-case hex characters.

### Example
`876ef6f5fe7fd8d7`
`20095a930b528883e90228a38d507d9c47e23696e7ba6318e1b81e5811c28952`

## Status Codes and Errors

This API uses HTTP status codes to communicate with the API consumer.

+ `200 OK` - Response to a successful GET, PUT, PATCH or DELETE.
+ `201 Created` - Response to a POST that results in a creation.
+ `202 Accepted` - Response to a POST that results in a ongoing creation.
+ `204 No Content` - Response to a successful request that won't be returning a body (like a DELETE request).
+ `400 Bad Request` - Malformed request; form validation errors.
+ `401 Unauthorized` - When no or invalid authentication details are provided.
+ `403 Forbidden` - When authentication succeeded but authenticated user doesn't have access to the resource; also used when anonymity is broken during sensitive data accessing.
+ `404 Not Found` - When a non-existent resource is requested.
+ `405 Method Not Allowed` - Method not allowed.
+ `406 Not Acceptable` - Could not satisfy the request Accept header.
+ `409 Conflict` - When resource state forbids such request.
+ `415 Unsupported Media Type` - Unsupported media type in request.
+ `429 Too Many Requests` - User has sent too many requests in a given amount of time.

### Error response

This API only returns machine-readable error codes in the field `error`. Please refer to this document when an error is encountered.

## Data Structures

### BallotTicket
+ t: `whu44u3wVnqnVT78...` (string, required)
+ payload (object, required)
    + bId: `876ef6f5fe7fd8d7` (string, required)
    + result (array[string], required)
+ s: `y4V+udaSG4h9YWiH...` (array[string], required)
+ c: `qzohcWz1CLLJI2+J...` (array[string], required)

# Group Default

## Check system status [GET /]

**Endpoint information**

| Property                  | Value |
| ------------------------- | ----- |
| Authentication required   | No    |
| Anonymity enforced        | No    |

+ Response 200 (application/json; charset=utf-8)

    + Attributes
        + version: `4907ca16`
        + commitHash: `4907ca16faf693b76a71df0efd19ef9dcefaa309`

## Check system status and anonymity [GET /secret]

This endpoint allows check your anonymity. User will get verbose output even `403` error is encountered.

**Endpoint information**

| Property                  | Value |
| ------------------------- | ----- |
| Authentication required   | No    |
| Anonymity enforced        | Yes   |

+ Response 200 (application/json; charset=utf-8)

    + Attributes
        + version: `4907ca16`
        + commitHash: `4907ca16faf693b76a71df0efd19ef9dcefaa309`
        + ip: `123.123.123.123`
        + headers (object)

+ Response 403 (application/json; charset=utf-8)

    + Attributes
        + version: `4907ca16`
        + commitHash: `4907ca16faf693b76a71df0efd19ef9dcefaa309`
        + ip: `123.123.123.123`
        + headers (object)

# Group Voter

## Anonymously submit a signed ticket [POST /secret/tickets]

- If `Accept` header is set to `application/json`, then response `202` or various error codes are expected.
- If `Accept` header is set to `text/html`, then `text/html` will be given, allowing running in a non-javascript environment.

**Endpoint information**

| Property                  | Value |
| ------------------------- | ----- |
| Authentication required   | No    |
| Anonymity enforced        | Yes   |

**Error codes**

| Code    | Error    | Description                                 |
| ------- | -------- | ------------------------------------------- |
| `400`   | `rsmf`   | `payload.result` malformed                  |
| `404`   | `xbid`   | `payload.bId` non-exist                     |
| `409`   | `nvtg`   | Ballot status is not `voting`               |

+ Request (application/json)

    + Headers

            Accept: application/json

    + Attributes (BallotTicket)

+ Response 202 (application/json; charset=utf-8)

    + Attributes
        + tId: `d82f714ec7a98ff372d72c7ba20146cc58cce58379f61249727a391ff3f4e953` (string)

+ Request (application/x-www-form-urlencoded)

    + Headers

            Accept: text/html

    + Body

            enc=eyJ0Ijoid2h1NDR1M3dWbnFuVlQ3OA0K...

+ Response 202 (text/html)

    + Body

            Ticket staged. Your tId is <pre>d82f714ec7a98ff372d72c7ba20146cc58cce58379f61249727a391ff3f4e953</pre>

+ Response 400 (text/html)

    + Body

            Error occured: <pre>rsmf</pre>

+ Response 403 (text/html)

    + Body

            Error occured: <pre>anon</pre>

+ Response 404 (text/html)

    + Body

            Error occured: <pre>xbid</pre>

+ Response 409 (text/html)

    + Body

            Error occured: <pre>nvtg</pre>

## Anonymously query submitted ticket status [GET /secret/tickets/?tId={tId}]

- If `Accept` header is set to `application/json`, then response `202`, `204` or various error codes are expected.
- If `Accept` header is set to `text/html`, then `text/html` will be given, allowing running in a non-javascript environment.

**Endpoint information**

| Property                  | Value |
| ------------------------- | ----- |
| Authentication required   | No    |
| Anonymity enforced        | Yes   |

**Error codes**

| Code    | Error    | Description                                 |
| ------- | -------- | ------------------------------------------- |
| `401`   | `xsgn`   | Invalid signature                           |
| `409`   | `nvtg`   | Ballot status is not `voting`               |

+ Parameters
    + tId: d82f714ec7a98ff372d72c7ba20146cc58cce58379f61249727a391ff3f4e953 (required, string) - Trace ID issued by [POST /secret/tickets].

+ Request

    + Headers

            Accept: application/json

+ Response 202

+ Response 204

+ Request

    + Headers

            Accept: text/html

+ Response 202 (text/html)

    + Body

            Still processing.

+ Response 200 (text/html)

    + Body

            Success.

+ Response 401 (text/html)

    + Body

            Error occured: <pre>xsgn</pre>

+ Response 403 (text/html)

    + Body

            Error occured: <pre>anon</pre>

+ Response 409 (text/html)

    + Body

            Error occured: <pre>nvtg</pre>

