FORMAT: 1A

# Ballot

Customizable anonymous online balloting system with ring signature authentication.

## Authentication

+ This API uses [JWT](http://jwt.io/) for authentication,
+ Every token MUST be refreshed before its expiration time,
+ Token MUST be provided in `Authorization` header,
+ Token MUST be provided for each request that requires authentication,

### Claims
+ `exp` - The exp ( *expiration time* ) claim identifies the expiration time on or after which the JWT MUST NOT be accepted for processing.
+ `iat` - The iat ( *issued at* ) claim identifies the time at which the JWT was issued.
+ `sub` - The aud ( *audience* ) claim identifies the subject of this token (for e.g. a user id).
+ `iss` - The iss ( *issuer* ) claim identifies the principal that issued the JWT.

## Filtering, Ordering, Pagination

### Filtering

Filtering is not supported.

### Ordering

Ordering is not supported.

### Pagination

Pagination is not supported.

## HTTP Methods

This API uses HTTP verbs (methods) as following:

+ `GET` - *Read* - used to **read** (or retrieve) a representation of a resource,
+ `POST` - *Create* - used to **create** new resources. In particular, it's used to create subordinate resources.
+ `PUT` - *Update/Replace* - used for **update** capabilities, PUT-ing to a known resource URI with the request body containing the newly-updated representation of the original resource. On successful request, replaces identified resource with the request body.
+ `PATCH` - *Lock* - used for **lock** capabilities. The PATCH request causes resource to be locked.
+ `DELETE` - *Delete* - used to **delete** a resource identified by a URI.

## Media Type

Where applicable this API MUST use the JSON media-type. Requests with a message-body are using plain JSON to set or update resource states.

`Content-Type: application/json` header MUST be set on all requests. `Accept: application/json` header SHOULD be set on all requests.

## Notational Conventions

The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119](https://www.ietf.org/rfc/rfc2119).

## Resource IDs

This API uses long non-sequential unique ids. Every resource id MUST consists of 16 or 64 lower-case hex characters.

### Example
`876ef6f5fe7fd8d7`
`20095a930b528883e90228a38d507d9c47e23696e7ba6318e1b81e5811c28952`

## Status Codes and Errors

This API uses HTTP status codes to communicate with the API consumer.

+ `200 OK` - Response to a successful GET, PUT, PATCH or DELETE.
+ `201 Created` - Response to a POST that results in a creation.
+ `202 Accepted` - Response to a POST that results in a ongoing creation.
+ `204 No Content` - Response to a successful request that won't be returning a body (like a DELETE request).
+ `400 Bad Request` - Malformed request; form validation errors.
+ `401 Unauthorized` - When no or invalid authentication details are provided.
+ `403 Forbidden` - When authentication succeeded but authenticated user doesn't have access to the resource; also used when anonymity is broken during sensitive data accessing.
+ `404 Not Found` - When a non-existent resource is requested.
+ `405 Method Not Allowed` - Method not allowed.
+ `406 Not Acceptable` - Could not satisfy the request Accept header.
+ `409 Conflict` - When resource state forbids such request.
+ `415 Unsupported Media Type` - Unsupported media type in request.
+ `429 Too Many Requests` - User has sent too many requests in a given amount of time.

### Error response

This API only returns machine-readable error codes in the field `error`. Please refer to this document when an error is encountered.

## Data Structures

### RawCredential
+ username: `alice` (string, required)
+ password: `letmein` (string, required)

### Ballot
+ bId: `876ef6f5fe7fd8d7` (string)
+ name: `the-ballot` (string)
+ status (enum)
    + creating (string)
    + inviting (string)
    + invited (string)
    + pre-voting (string)
    + voting (string)
    + finished (string)

### BallotCrypto
+ bId: `876ef6f5fe7fd8d7` (string)
+ q: `3XZ4+lRLx0I9jzEU...` (string)
+ g: `9EWKxabxMFLvZiVI...` (string)
+ h: `60vGbvWnsjKvcDYz...` (string)

### BallotField
+ prompt: `description` (string, required)
+ type (enum, required)
    + enum (string)
    + string (string)
+ data (array[string])

### BallotVoter
+ iCode: `20095a930b528883e90228a38d507d9c47e23696e7ba6318e1b81e5811c28952` (string)
+ name: `Bob` (string)
+ comment: `bob's self explanation` (string)
+ publicKey: `EIBy/4RYxoeg0pbu...` (string)

### BallotTicket
+ t: `whu44u3wVnqnVT78...` (string, required)
+ payload (object, required)
    + bId: `876ef6f5fe7fd8d7` (string, required)
    + result (array[string], required)
+ s: `y4V+udaSG4h9YWiH...` (array[string], required)
+ c: `qzohcWz1CLLJI2+J...` (array[string], required)

### BallotTicketStat
+ count: 10 (number)
+ summary (array[object])

# Group Default

## Check system status [GET /]

**Endpoint information**

| Property                  | Value |
| ------------------------- | ----- |
| Authentication required   | No    |
| Anonymity enforced        | No    |

+ Response 200 (application/json; charset=utf-8)

    + Attributes
        + version: `4907ca16`
        + commitHash: `4907ca16faf693b76a71df0efd19ef9dcefaa309`

## Check system status and anonymity [GET /secret]

This endpoint allows check your anonymity. User will get verbose output even `403` error is encountered.

**Endpoint information**

| Property                  | Value |
| ------------------------- | ----- |
| Authentication required   | No    |
| Anonymity enforced        | Yes   |

+ Response 200 (application/json; charset=utf-8)

    + Attributes
        + version: `4907ca16`
        + commitHash: `4907ca16faf693b76a71df0efd19ef9dcefaa309`
        + ip: `123.123.123.123`
        + headers (object)

+ Response 403 (application/json; charset=utf-8)

    + Attributes
        + version: `4907ca16`
        + commitHash: `4907ca16faf693b76a71df0efd19ef9dcefaa309`
        + ip: `123.123.123.123`
        + headers (object)

# Group Organizer

## Create account [POST /register]

+ Username must be unique.
+ Username must have at least 5 characters.
+ Username must be composed of alphanumeric and dash.
+ Password must have at least 8 characters.

**Endpoint information**

| Property                  | Value |
| ------------------------- | ----- |
| Authentication required   | No    |
| Anonymity enforced        | No    |

**Error codes**

| Code    | Error    | Description                                 |
| ------- | -------- | ------------------------------------------- |
| `400`   | `unmf`   | Username malformed                          |
| `400`   | `pwmf`   | Password malformed                          |
| `400`   | `unex`   | Username exists                             |

+ Request (application/json)

    + Attributes (RawCredential)

+ Response 201

## Get credential [POST /login]

**Endpoint information**

| Property                  | Value |
| ------------------------- | ----- |
| Authentication required   | No    |
| Anonymity enforced        | No    |

+ Request (application/json)

    + Attributes (RawCredential)

+ Response 200 (application/json; charset=utf-8)

    + Attributes
        + token: `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...` (string)

## Change password [POST /password]

**Endpoint information**

| Property                  | Value |
| ------------------------- | ----- |
| Authentication required   | Yes   |
| Anonymity enforced        | No    |

**Error codes**

| Code    | Error    | Description                                 |
| ------- | -------- | ------------------------------------------- |
| `400`   | `pwmf`   | Password malformed                          |

+ Request (application/json)

    + Headers

            Authorization: JWT <token>

    + Attributes
        + oldPassword: `letmein` (string, required)
        + newPassword: `letmeout` (string, required)

+ Response 204

## Ballot Collection [/ballots]

### List all ballots [GET]

**Endpoint information**

| Property                  | Value |
| ------------------------- | ----- |
| Authentication required   | Yes   |
| Anonymity enforced        | No    |

+ Request

    + Headers

            Authorization: JWT <token>

+ Response 200 (application/json; charset=utf-8)

    + Attributes (array[Ballot])

### Create a new ballot [POST]

**Endpoint information**

| Property                  | Value |
| ------------------------- | ----- |
| Authentication required   | Yes   |
| Anonymity enforced        | No    |

+ Request (application/json)

    + Headers

            Authorization: JWT <token>

    + Attributes
        + name: `the-ballot` (string, required)

+ Response 201 (application/json; charset=utf-8)

    + Attributes (Ballot)

## Ballot [/ballots/{bId}]

+ Parameters
    + bId: 876ef6f5fe7fd8d7 (required, string) - ID of the ballot

### View ballot general info [GET]

**Endpoint information**

| Property                  | Value |
| ------------------------- | ----- |
| Authentication required   | No    |
| Anonymity enforced        | No    |

+ Response 200 (application/json; charset=utf-8)

    + Attributes (Ballot)

## Ballot cryptography [/ballots/{bId}/crypto]

+ Parameters
    + bId: 876ef6f5fe7fd8d7 (required, string) - ID of the ballot

### View ballot cryptography info [GET]

**Endpoint information**

| Property                  | Value |
| ------------------------- | ----- |
| Authentication required   | No    |
| Anonymity enforced        | No    |

+ Response 200 (application/json; charset=utf-8)

    + Attributes (BallotCrypto)

## Ballot field collection [/ballots/{bId}/fields]

+ Parameters
    + bId: 876ef6f5fe7fd8d7 (required, string) - ID of the ballot

### List all fields of a ballot [GET]

Authentication **is** required only when ballot status is one of the following:
- `created`
- `inviting`
- `invited`

Authentication is **not** required only when ballot status is one of the following:
- `pre-voting`
- `voting`
- `finished`

**Endpoint information**

| Property                  | Value       |
| ------------------------- | -----       |
| Authentication required   | *See Above* |
| Anonymity enforced        | No          |

+ Response 200 (application/json; charset=utf-8)

    + Attributes (array[BallotField])

### Append a new field [POST]

**Endpoint information**

| Property                  | Value |
| ------------------------- | ----- |
| Authentication required   | Yes   |
| Anonymity enforced        | No    |

**Error codes**

| Code    | Error    | Description                                 |
| ------- | -------- | ------------------------------------------- |
| `400`   | `fdmf`   | Field malformed                             |
| `409`   | `flkd`   | Field changes locked by ballot status       |

+ Request (application/json)

    + Headers

            Authorization: JWT <token>

    + Attributes (BallotField)

+ Response 201

### Replace all fields [PUT]

**Endpoint information**

| Property                  | Value |
| ------------------------- | ----- |
| Authentication required   | Yes   |
| Anonymity enforced        | No    |

**Error codes**

| Code    | Error    | Description                                 |
| ------- | -------- | ------------------------------------------- |
| `400`   | `fdmf`   | Field malformed                             |
| `409`   | `flkd`   | Field changes locked by ballot status       |

+ Request (application/json)

    + Headers

            Authorization: JWT <token>

    + Attributes (array[BallotField])

+ Response 204

### Delete all fields [DELETE]

**Endpoint information**

| Property                  | Value |
| ------------------------- | ----- |
| Authentication required   | Yes   |
| Anonymity enforced        | No    |

**Error codes**

| Code    | Error    | Description                                 |
| ------- | -------- | ------------------------------------------- |
| `409`   | `flkd`   | Field changes locked by ballot status       |

+ Request

    + Headers

            Authorization: JWT <token>

+ Response 204

### Finalize field changes [PATCH]

This endpoint locks field changes, and turn ballot status from `invited` to `pre-voting`.

**Endpoint information**

| Property                  | Value |
| ------------------------- | ----- |
| Authentication required   | Yes   |
| Anonymity enforced        | No    |

**Error codes**

| Code    | Error    | Description                                 |
| ------- | -------- | ------------------------------------------- |
| `409`   | `snid`   | Ballot status is not `invited`              |

+ Request

    + Headers

            Authorization: JWT <token>

+ Response 204

## Ballot field [/ballots/{bId}/fields/{fieldId}]

+ Parameters
    + bId: 876ef6f5fe7fd8d7 (required, string) - ID of the ballot
    + fieldId: 0 (required, number) - Index of the field

### View field info [GET]

Authentication **is** required only when ballot status is one of the following:
- `created`
- `inviting`
- `invited`

Authentication is **not** required only when ballot status is one of the following:
- `pre-voting`
- `voting`
- `finished`

**Endpoint information**

| Property                  | Value       |
| ------------------------- | -----       |
| Authentication required   | *See Above* |
| Anonymity enforced        | No          |

+ Response 200 (application/json; charset=utf-8)

    + Attributes (BallotField)

### Insert a new field [POST]

**Endpoint information**

| Property                  | Value |
| ------------------------- | ----- |
| Authentication required   | Yes   |
| Anonymity enforced        | No    |

**Error codes**

| Code    | Error    | Description                                 |
| ------- | -------- | ------------------------------------------- |
| `400`   | `fdmf`   | Field malformed                             |
| `409`   | `flkd`   | Field changes locked by ballot status       |

+ Request (application/json)

    + Headers

            Authorization: JWT <token>

    + Attributes (BallotField)

+ Response 201

### Update a field [PUT]

**Endpoint information**

| Property                  | Value |
| ------------------------- | ----- |
| Authentication required   | Yes   |
| Anonymity enforced        | No    |

**Error codes**

| Code    | Error    | Description                                 |
| ------- | -------- | ------------------------------------------- |
| `400`   | `fdmf`   | Field malformed                             |
| `409`   | `flkd`   | Field changes locked by ballot status       |

+ Request (application/json)

    + Headers

            Authorization: JWT <token>

    + Attributes (BallotField)

+ Response 204

### Delete a field [DELETE]

**Endpoint information**

| Property                  | Value |
| ------------------------- | ----- |
| Authentication required   | Yes   |
| Anonymity enforced        | No    |

**Error codes**

| Code    | Error    | Description                                 |
| ------- | -------- | ------------------------------------------- |
| `409`   | `flkd`   | Field changes locked by ballot status       |

+ Request

    + Headers

            Authorization: JWT <token>

+ Response 204

## Voter collection [/ballots/{bId}/voters]

+ Parameters
    + bId: 876ef6f5fe7fd8d7 (required, string) - ID of the ballot

### List all voters [GET]

Authentication **is** required only when ballot status is one of the following:
- `created`
- `inviting`

Authentication is **not** required only when ballot status is one of the following:
- `invited`
- `pre-voting`
- `voting`
- `finished`

**Endpoint information**

| Property                  | Value       |
| ------------------------- | -----       |
| Authentication required   | *See Above* |
| Anonymity enforced        | No          |

+ Response 200 (application/json; charset=utf-8)

    + Attributes (array[BallotVoter])

### Create a new voter [POST]

**Endpoint information**

| Property                  | Value |
| ------------------------- | ----- |
| Authentication required   | Yes   |
| Anonymity enforced        | No    |

**Error codes**

| Code    | Error    | Description                                 |
| ------- | -------- | ------------------------------------------- |
| `409`   | `vlkd`   | Voter changes locked by ballot status       |

+ Request (application/json)

    + Headers

            Authorization: JWT <token>

    + Attributes
        + name: `Bob` (string, required)

+ Response 201 (application/json; charset=utf-8)

    + Attributes (BallotVoter)

### Finalize voter changes [PATCH]

This endpoint locks voter changes, and turn ballot status from `inviting` to `invited`.

**Endpoint information**

| Property                  | Value |
| ------------------------- | ----- |
| Authentication required   | Yes   |
| Anonymity enforced        | No    |

**Error codes**

| Code    | Error    | Description                                 |
| ------- | -------- | ------------------------------------------- |
| `409`   | `sniv`   | Ballot status is not `inviting`             |

+ Request

    + Headers

            Authorization: JWT <token>

+ Response 204

## Voter [/ballots/{bId}/voters/{iCode}]

+ Parameters
    + bId: 876ef6f5fe7fd8d7 (required, string) - ID of the ballot
    + iCode: 20095a930b528883e90228a38d507d9c47e23696e7ba6318e1b81e5811c28952 (required, string) - Invitation code issued by [POST /ballots/{bId}/voters].

### View voter info [GET]

Authentication **is** required only when ballot status is one of the following:
- `created`
- `inviting`

Authentication is **not** required only when ballot status is one of the following:
- `invited`
- `pre-voting`
- `voting`
- `finished`

**Endpoint information**

| Property                  | Value       |
| ------------------------- | -----       |
| Authentication required   | *See Above* |
| Anonymity enforced        | No          |

+ Response 200 (application/json; charset=utf-8)

    + Attributes (BallotVoter)

### Delete a voter [DELETE]

**Endpoint information**

| Property                  | Value |
| ------------------------- | ----- |
| Authentication required   | Yes   |
| Anonymity enforced        | No    |

**Error codes**

| Code    | Error    | Description                                 |
| ------- | -------- | ------------------------------------------- |
| `409`   | `vlkd`   | Voter changes locked by ballot status       |

+ Request

    + Headers

            Authorization: JWT <token>

+ Response 204

## Ticket collection [/ballots/{bId}/tickets]

+ Parameters
    + bId: 876ef6f5fe7fd8d7 (required, string) - ID of the ballot

### List all tickets [GET]

Authentication **is** required only when ballot status is one of the following:
- `voting`

Authentication is **not** required only when ballot status is one of the following:
- `finished`

**Endpoint information**

| Property                  | Value       |
| ------------------------- | -----       |
| Authentication required   | *See Above* |
| Anonymity enforced        | No          |

**Error codes**

| Code    | Error    | Description                                 |
| ------- | -------- | ------------------------------------------- |
| `409`   | `tnfn`   | Ballot status is not `voting` or `finished` |

+ Response 200 (application/json; charset=utf-8)

    + Attributes (array[BallotTicket])

## Ticket statistics [/ballots/{bId}/statistics]

+ Parameters
    + bId: 876ef6f5fe7fd8d7 (required, string) - ID of the ballot

### List ticket statistics [GET]

Authentication **is** required only when ballot status is one of the following:
- `voting`

Authentication is **not** required only when ballot status is one of the following:
- `finished`

**Endpoint information**

| Property                  | Value       |
| ------------------------- | -----       |
| Authentication required   | *See Above* |
| Anonymity enforced        | No          |

**Error codes**

| Code    | Error    | Description                                 |
| ------- | -------- | ------------------------------------------- |
| `409`   | `tnfn`   | Ballot status is not `voting` or `finished` |

+ Response 200 (application/json; charset=utf-8)

    + Attributes (BallotTicketStat)

# Group Voter

## Anonymously submit a signed ticket [POST /secret/tickets]

- If `Accept` header is set to `application/json`, then response `202` or various error codes are expected.
- If `Accept` header is not set to `application/json`, then response `303` will be given, allowing running in a non-javascript environment.

**Endpoint information**

| Property                  | Value |
| ------------------------- | ----- |
| Authentication required   | No    |
| Anonymity enforced        | Yes   |

**Error codes**

| Code    | Error    | Description                                 |
| ------- | -------- | ------------------------------------------- |
| `400`   | `rsmf`   | `payload.result` malformed                  |
| `404`   | `xbid`   | `payload.bId` non-exist                     |
| `409`   | `nvtg`   | Ballot status is not `voting`               |

+ Request (application/json)

    + Attributes (BallotTicket)

+ Response 202 (application/json; charset=utf-8)

    + Attributes
        + tId: `d82f714ec7a98ff372d72c7ba20146cc58cce58379f61249727a391ff3f4e953` (string)

+ Request (application/x-www-form-urlencoded)

    + Body

        enc=eyJ0Ijoid2h1NDR1M3dWbnFuVlQ3OA0K...

+ Response 303

## Anonymously query submitted ticket status [GET /secret/tickets/{tId}]

- If `Accept` header is set to `application/json`, then response `202`, `204` or various error codes are expected.
- If `Accept` header is not set to `application/json`, then response `303` will be given, allowing running in a non-javascript environment.

**Endpoint information**

| Property                  | Value |
| ------------------------- | ----- |
| Authentication required   | No    |
| Anonymity enforced        | Yes   |

**Error codes**

| Code    | Error    | Description                                 |
| ------- | -------- | ------------------------------------------- |
| `401`   | `xsgn`   | Invalid signature                           |
| `409`   | `nvtg`   | Ballot status is not `voting`               |

+ Parameters
    + tId: d82f714ec7a98ff372d72c7ba20146cc58cce58379f61249727a391ff3f4e953 (required, string) - Trace ID issued by [POST /secret/tickets].

+ Response 202

+ Response 204

+ Response 303

## Voter [/voters/{iCode}]

+ Parameters
    + iCode: 20095a930b528883e90228a38d507d9c47e23696e7ba6318e1b81e5811c28952 (required, string) - Invitation code issued by [POST /ballots/{bId}/voters].

### View voter info [GET]

**Endpoint information**

| Property                  | Value |
| ------------------------- | ----- |
| Authentication required   | No    |
| Anonymity enforced        | No    |

+ Response 200 (application/json; charset=utf-8)

    + Attributes
        + bId: `876ef6f5fe7fd8d7` (string)
        + name: `Bob` (string)

### Register as a voter [POST]

**Endpoint information**

| Property                  | Value |
| ------------------------- | ----- |
| Authentication required   | No    |
| Anonymity enforced        | No    |

**Error codes**

| Code    | Error    | Description                                 |
| ------- | -------- | ------------------------------------------- |
| `400`   | `pkmf`   | Public key malformed                        |
| `409`   | `rniv`   | Ballot status is not `inviting`             |

+ Request (application/json)

    + Attributes
        + comment: `bob's self explanation` (string)
        + publicKey: `EIBy/4RYxoeg0pbu...` (string)

+ Response 201

