  it('should handle {{ camelCase sagaName }} request', () => {
    const originalState = state.set('isLoading', false);
    const param = {{curly true}} {{ camelCase sagaParam }}: 'val' {{curly false}};
    const expectedResult = state.set('isLoading', true);

    expect({{ camelCase name }}Reducer(originalState, {{ camelCase name }}Actions.{{ camelCase sagaName }}Request(param))).toEq(expectedResult);
  });

  it('should handle {{ camelCase sagaName }} success', () => {
    const originalState = state.set('isLoading', true);
    const result = { };
    const expectedResult = state.set('isLoading', false);

    expect({{ camelCase name }}Reducer(originalState, {{ camelCase name }}Actions.{{ camelCase sagaName }}Success(result))).toEq(expectedResult);
  });

  it('should handle {{ camelCase sagaName }} failure', () => {
    const originalState = state.set('isLoading', true);
    const error = { };
    const expectedResult = state.set('isLoading', false);

    expect({{ camelCase name }}Reducer(originalState, {{ camelCase name }}Actions.{{ camelCase sagaName }}Failure(error))).toEq(expectedResult);
  });
